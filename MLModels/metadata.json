{
  "domain": {
    "version": "3.1",
    "intents": [
      "affirm",
      "attraction_find_attraction",
      "bot_challenge",
      "bus_find_bus",
      "deny",
      "fallback",
      "general_question",
      "goodbye",
      "greet",
      "hospital_find_hospital",
      "hotel_book_hotel",
      "hotel_find_hotel",
      "order_status",
      "police_police",
      "product_inquiry",
      "restaurant_book_restaurant",
      "restaurant_find_restaurant",
      "returns_policy",
      "speak_to_human",
      "taxi_book_taxi",
      "technical_issue",
      "train_book_train",
      "train_find_train"
    ],
    "entities": [
      "pricerange",
      "hotel_type",
      "parking",
      "day",
      "people",
      "stay",
      "stars",
      "internet",
      "name",
      "area",
      "address",
      "phone",
      "postcode",
      "ref",
      "arriveby",
      "departure",
      "leaveat",
      "destination",
      "trainid",
      "price",
      "duration",
      "entrancefee",
      "openhours",
      "food",
      "time",
      "department",
      "type"
    ],
    "slots": {
      "hotel_hotel-pricerange": {
        "type": "categorical",
        "values": [
          "expensive",
          "cheap",
          "moderate"
        ],
        "influence_conversation": true,
        "mappings": [
          {
            "type": "from_entity",
            "entity": "pricerange"
          }
        ]
      },
      "hotel_hotel-type": {
        "type": "categorical",
        "values": [
          "guesthouse",
          "hotel"
        ],
        "influence_conversation": true,
        "mappings": [
          {
            "type": "from_entity",
            "entity": "hotel_type"
          }
        ]
      },
      "hotel_hotel-parking": {
        "type": "categorical",
        "values": [
          "free",
          "no",
          "yes"
        ],
        "influence_conversation": true,
        "mappings": [
          {
            "type": "from_entity",
            "entity": "parking"
          }
        ]
      },
      "hotel_hotel-bookday": {
        "type": "categorical",
        "values": [
          "monday",
          "tuesday",
          "wednesday",
          "thursday",
          "friday",
          "saturday",
          "sunday"
        ],
        "influence_conversation": true,
        "mappings": [
          {
            "type": "from_entity",
            "entity": "day"
          }
        ]
      },
      "hotel_hotel-bookpeople": {
        "type": "categorical",
        "values": [
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8
        ],
        "influence_conversation": true,
        "mappings": [
          {
            "type": "from_entity",
            "entity": "people"
          }
        ]
      },
      "hotel_hotel-bookstay": {
        "type": "categorical",
        "values": [
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8
        ],
        "influence_conversation": true,
        "mappings": [
          {
            "type": "from_entity",
            "entity": "stay"
          }
        ]
      },
      "hotel_hotel-stars": {
        "type": "categorical",
        "values": [
          0,
          1,
          2,
          3,
          4,
          5
        ],
        "influence_conversation": true,
        "mappings": [
          {
            "type": "from_entity",
            "entity": "stars"
          }
        ]
      },
      "hotel_hotel-internet": {
        "type": "categorical",
        "values": [
          "free",
          "no",
          "yes"
        ],
        "influence_conversation": true,
        "mappings": [
          {
            "type": "from_entity",
            "entity": "internet"
          }
        ]
      },
      "hotel_hotel-name": {
        "type": "text",
        "influence_conversation": true,
        "mappings": [
          {
            "type": "from_entity",
            "entity": "name"
          }
        ]
      },
      "hotel_hotel-area": {
        "type": "categorical",
        "values": [
          "centre",
          "east",
          "north",
          "south",
          "west"
        ],
        "influence_conversation": true,
        "mappings": [
          {
            "type": "from_entity",
            "entity": "area"
          }
        ]
      },
      "hotel_hotel-address": {
        "type": "text",
        "influence_conversation": true,
        "mappings": [
          {
            "type": "from_entity",
            "entity": "address"
          }
        ]
      },
      "hotel_hotel-phone": {
        "type": "text",
        "influence_conversation": true,
        "mappings": [
          {
            "type": "from_entity",
            "entity": "phone"
          }
        ]
      },
      "hotel_hotel-postcode": {
        "type": "text",
        "influence_conversation": true,
        "mappings": [
          {
            "type": "from_entity",
            "entity": "postcode"
          }
        ]
      },
      "hotel_hotel-ref": {
        "type": "text",
        "influence_conversation": true,
        "mappings": [
          {
            "type": "from_entity",
            "entity": "ref"
          }
        ]
      },
      "train_train-arriveby": {
        "type": "text",
        "influence_conversation": true,
        "mappings": [
          {
            "type": "from_entity",
            "entity": "arriveby"
          }
        ]
      },
      "train_train-departure": {
        "type": "categorical",
        "values": [
          "birmingham new street",
          "bishops stortford",
          "broxbourne",
          "cambridge",
          "ely",
          "kings lynn",
          "leicester",
          "london kings cross",
          "london liverpool street",
          "norwich",
          "peterborough",
          "stansted airport",
          "stevenage"
        ],
        "influence_conversation": true,
        "mappings": [
          {
            "type": "from_entity",
            "entity": "departure"
          }
        ]
      },
      "train_train-day": {
        "type": "categorical",
        "values": [
          "monday",
          "tuesday",
          "wednesday",
          "thursday",
          "friday",
          "saturday",
          "sunday"
        ],
        "influence_conversation": true,
        "mappings": [
          {
            "type": "from_entity",
            "entity": "day"
          }
        ]
      },
      "train_train-bookpeople": {
        "type": "categorical",
        "values": [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9,
          10,
          15
        ],
        "influence_conversation": true,
        "mappings": [
          {
            "type": "from_entity",
            "entity": "people"
          }
        ]
      },
      "train_train-leaveat": {
        "type": "text",
        "influence_conversation": true,
        "mappings": [
          {
            "type": "from_entity",
            "entity": "leaveat"
          }
        ]
      },
      "train_train-destination": {
        "type": "categorical",
        "values": [
          "birmingham new street",
          "bishops stortford",
          "broxbourne",
          "cambridge",
          "ely",
          "kings lynn",
          "leicester",
          "london kings cross",
          "london liverpool street",
          "norwich",
          "peterborough",
          "stansted airport",
          "stevenage"
        ],
        "influence_conversation": true,
        "mappings": [
          {
            "type": "from_entity",
            "entity": "destination"
          }
        ]
      },
      "train_train-trainid": {
        "type": "text",
        "influence_conversation": true,
        "mappings": [
          {
            "type": "from_entity",
            "entity": "trainid"
          }
        ]
      },
      "train_train-ref": {
        "type": "text",
        "influence_conversation": true,
        "mappings": [
          {
            "type": "from_entity",
            "entity": "ref"
          }
        ]
      },
      "train_train-price": {
        "type": "text",
        "influence_conversation": true,
        "mappings": [
          {
            "type": "from_entity",
            "entity": "price"
          }
        ]
      },
      "train_train-duration": {
        "type": "text",
        "influence_conversation": true,
        "mappings": [
          {
            "type": "from_entity",
            "entity": "duration"
          }
        ]
      },
      "attraction_attraction-area": {
        "type": "categorical",
        "values": [
          "centre",
          "east",
          "north",
          "south",
          "west"
        ],
        "influence_conversation": true,
        "mappings": [
          {
            "type": "from_entity",
            "entity": "area"
          }
        ]
      },
      "attraction_attraction-name": {
        "type": "text",
        "influence_conversation": true,
        "mappings": [
          {
            "type": "from_entity",
            "entity": "name"
          }
        ]
      },
      "attraction_attraction-type": {
        "type": "categorical",
        "values": [
          "architecture",
          "boat",
          "cinema",
          "college",
          "concerthall",
          "entertainment",
          "museum",
          "multiple sports",
          "nightclub",
          "park",
          "swimmingpool",
          "theatre"
        ],
        "influence_conversation": true,
        "mappings": [
          {
            "type": "from_entity",
            "entity": "type"
          }
        ]
      },
      "attraction_attraction-entrancefee": {
        "type": "text",
        "influence_conversation": true,
        "mappings": [
          {
            "type": "from_entity",
            "entity": "entrancefee"
          }
        ]
      },
      "attraction_attraction-openhours": {
        "type": "text",
        "influence_conversation": true,
        "mappings": [
          {
            "type": "from_entity",
            "entity": "openhours"
          }
        ]
      },
      "attraction_attraction-address": {
        "type": "text",
        "influence_conversation": true,
        "mappings": [
          {
            "type": "from_entity",
            "entity": "address"
          }
        ]
      },
      "attraction_attraction-phone": {
        "type": "text",
        "influence_conversation": true,
        "mappings": [
          {
            "type": "from_entity",
            "entity": "phone"
          }
        ]
      },
      "attraction_attraction-postcode": {
        "type": "text",
        "influence_conversation": true,
        "mappings": [
          {
            "type": "from_entity",
            "entity": "postcode"
          }
        ]
      },
      "restaurant_restaurant-pricerange": {
        "type": "categorical",
        "values": [
          "cheap",
          "expensive",
          "moderate"
        ],
        "influence_conversation": true,
        "mappings": [
          {
            "type": "from_entity",
            "entity": "pricerange"
          }
        ]
      },
      "restaurant_restaurant-area": {
        "type": "categorical",
        "values": [
          "centre",
          "east",
          "north",
          "south",
          "west"
        ],
        "influence_conversation": true,
        "mappings": [
          {
            "type": "from_entity",
            "entity": "area"
          }
        ]
      },
      "restaurant_restaurant-food": {
        "type": "text",
        "influence_conversation": true,
        "mappings": [
          {
            "type": "from_entity",
            "entity": "food"
          }
        ]
      },
      "restaurant_restaurant-name": {
        "type": "text",
        "influence_conversation": true,
        "mappings": [
          {
            "type": "from_entity",
            "entity": "name"
          }
        ]
      },
      "restaurant_restaurant-bookday": {
        "type": "categorical",
        "values": [
          "monday",
          "tuesday",
          "wednesday",
          "thursday",
          "friday",
          "saturday",
          "sunday"
        ],
        "influence_conversation": true,
        "mappings": [
          {
            "type": "from_entity",
            "entity": "day"
          }
        ]
      },
      "restaurant_restaurant-bookpeople": {
        "type": "categorical",
        "values": [
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8
        ],
        "influence_conversation": true,
        "mappings": [
          {
            "type": "from_entity",
            "entity": "people"
          }
        ]
      },
      "restaurant_restaurant-booktime": {
        "type": "text",
        "influence_conversation": true,
        "mappings": [
          {
            "type": "from_entity",
            "entity": "time"
          }
        ]
      },
      "restaurant_restaurant-address": {
        "type": "text",
        "influence_conversation": true,
        "mappings": [
          {
            "type": "from_entity",
            "entity": "address"
          }
        ]
      },
      "restaurant_restaurant-phone": {
        "type": "text",
        "influence_conversation": true,
        "mappings": [
          {
            "type": "from_entity",
            "entity": "phone"
          }
        ]
      },
      "restaurant_restaurant-postcode": {
        "type": "text",
        "influence_conversation": true,
        "mappings": [
          {
            "type": "from_entity",
            "entity": "postcode"
          }
        ]
      },
      "restaurant_restaurant-ref": {
        "type": "text",
        "influence_conversation": true,
        "mappings": [
          {
            "type": "from_entity",
            "entity": "ref"
          }
        ]
      },
      "hospital_hospital-department": {
        "type": "text",
        "influence_conversation": true,
        "mappings": [
          {
            "type": "from_entity",
            "entity": "department"
          }
        ]
      },
      "hospital_hospital-address": {
        "type": "text",
        "influence_conversation": true,
        "mappings": [
          {
            "type": "from_entity",
            "entity": "address"
          }
        ]
      },
      "hospital_hospital-phone": {
        "type": "text",
        "influence_conversation": true,
        "mappings": [
          {
            "type": "from_entity",
            "entity": "phone"
          }
        ]
      },
      "hospital_hospital-postcode": {
        "type": "text",
        "influence_conversation": true,
        "mappings": [
          {
            "type": "from_entity",
            "entity": "postcode"
          }
        ]
      },
      "taxi_taxi-leaveat": {
        "type": "text",
        "influence_conversation": true,
        "mappings": [
          {
            "type": "from_entity",
            "entity": "leaveat"
          }
        ]
      },
      "taxi_taxi-destination": {
        "type": "text",
        "influence_conversation": true,
        "mappings": [
          {
            "type": "from_entity",
            "entity": "destination"
          }
        ]
      },
      "taxi_taxi-departure": {
        "type": "text",
        "influence_conversation": true,
        "mappings": [
          {
            "type": "from_entity",
            "entity": "departure"
          }
        ]
      },
      "taxi_taxi-arriveby": {
        "type": "text",
        "influence_conversation": true,
        "mappings": [
          {
            "type": "from_entity",
            "entity": "arriveby"
          }
        ]
      },
      "taxi_taxi-type": {
        "type": "text",
        "influence_conversation": true,
        "mappings": [
          {
            "type": "from_entity",
            "entity": "type"
          }
        ]
      },
      "taxi_taxi-phone": {
        "type": "text",
        "influence_conversation": true,
        "mappings": [
          {
            "type": "from_entity",
            "entity": "phone"
          }
        ]
      },
      "bus_bus-departure": {
        "type": "text",
        "influence_conversation": true,
        "mappings": [
          {
            "type": "from_entity",
            "entity": "departure"
          }
        ]
      },
      "bus_bus-destination": {
        "type": "text",
        "influence_conversation": true,
        "mappings": [
          {
            "type": "from_entity",
            "entity": "destination"
          }
        ]
      },
      "bus_bus-leaveat": {
        "type": "text",
        "influence_conversation": true,
        "mappings": [
          {
            "type": "from_entity",
            "entity": "leaveat"
          }
        ]
      },
      "bus_bus-day": {
        "type": "categorical",
        "values": [
          "wednesday"
        ],
        "influence_conversation": true,
        "mappings": [
          {
            "type": "from_entity",
            "entity": "day"
          }
        ]
      },
      "police_police-address": {
        "type": "text",
        "influence_conversation": true,
        "mappings": [
          {
            "type": "from_entity",
            "entity": "address"
          }
        ]
      },
      "police_police-phone": {
        "type": "text",
        "influence_conversation": true,
        "mappings": [
          {
            "type": "from_entity",
            "entity": "phone"
          }
        ]
      },
      "police_police-postcode": {
        "type": "text",
        "influence_conversation": true,
        "mappings": [
          {
            "type": "from_entity",
            "entity": "postcode"
          }
        ]
      },
      "police_police-name": {
        "type": "categorical",
        "values": [
          "parkside police station"
        ],
        "influence_conversation": true,
        "mappings": [
          {
            "type": "from_entity",
            "entity": "name"
          }
        ]
      }
    },
    "responses": {
      "utter_hotel_info": [
        {
          "text": "Here is the information for hotel"
        }
      ],
      "utter_train_info": [
        {
          "text": "Here is the information for train"
        }
      ],
      "utter_attraction_info": [
        {
          "text": "Here is the information for attraction"
        }
      ],
      "utter_restaurant_info": [
        {
          "text": "Here is the information for restaurant"
        }
      ],
      "utter_hospital_info": [
        {
          "text": "Here is the information for hospital"
        }
      ],
      "utter_taxi_info": [
        {
          "text": "Here is the information for taxi"
        }
      ],
      "utter_bus_info": [
        {
          "text": "Here is the information for bus"
        }
      ],
      "utter_police_info": [
        {
          "text": "Here is the information for police"
        }
      ],
      "utter_greet": [
        {
          "text": "Hello! How can I assist you today?"
        }
      ],
      "utter_goodbye": [
        {
          "text": "Goodbye, have a great day!"
        }
      ],
      "utter_iamabot": [
        {
          "text": "I am a bot, here to help you!"
        }
      ],
      "utter_ask_human_handoff": [
        {
          "text": "Would you like to speak to a human?"
        }
      ],
      "utter_human_handoff": [
        {
          "text": "Transferring you to a human agent."
        }
      ]
    },
    "actions": [
      "action_query_hotel",
      "action_query_train",
      "action_query_attraction",
      "action_query_restaurant",
      "action_query_hospital",
      "action_query_taxi",
      "action_query_bus",
      "action_query_police",
      "action_ask_gpt"
    ],
    "session_config": {
      "session_expiration_time": 60,
      "carry_over_slots_to_new_session": true
    }
  },
  "trained_at": "2025-03-16T07:05:01.690640",
  "model_id": "769f01b410214432ab0ee0c14c691dee",
  "assistant_id": "20250315-162453-tart-resolution",
  "rasa_open_source_version": "3.6.21",
  "train_schema": {
    "nodes": {
      "schema_validator": {
        "needs": {
          "importer": "__importer__"
        },
        "uses": "rasa.graph_components.validators.default_recipe_validator.DefaultV1RecipeValidator",
        "constructor_name": "create",
        "fn": "validate",
        "config": {},
        "eager": false,
        "is_target": false,
        "is_input": true,
        "resource": null
      },
      "finetuning_validator": {
        "needs": {
          "importer": "schema_validator"
        },
        "uses": "rasa.graph_components.validators.finetuning_validator.FinetuningValidator",
        "constructor_name": "create",
        "fn": "validate",
        "config": {
          "validate_core": true,
          "validate_nlu": true
        },
        "eager": false,
        "is_target": false,
        "is_input": true,
        "resource": null
      },
      "nlu_training_data_provider": {
        "needs": {
          "importer": "finetuning_validator"
        },
        "uses": "rasa.graph_components.providers.nlu_training_data_provider.NLUTrainingDataProvider",
        "constructor_name": "create",
        "fn": "provide",
        "config": {
          "language": "en",
          "persist": false
        },
        "eager": false,
        "is_target": false,
        "is_input": true,
        "resource": null
      },
      "run_WhitespaceTokenizer0": {
        "needs": {
          "training_data": "nlu_training_data_provider"
        },
        "uses": "rasa.nlu.tokenizers.whitespace_tokenizer.WhitespaceTokenizer",
        "constructor_name": "load",
        "fn": "process_training_data",
        "config": {},
        "eager": false,
        "is_target": false,
        "is_input": false,
        "resource": null
      },
      "train_RegexFeaturizer1": {
        "needs": {
          "training_data": "run_WhitespaceTokenizer0"
        },
        "uses": "rasa.nlu.featurizers.sparse_featurizer.regex_featurizer.RegexFeaturizer",
        "constructor_name": "create",
        "fn": "train",
        "config": {},
        "eager": false,
        "is_target": true,
        "is_input": false,
        "resource": null
      },
      "run_RegexFeaturizer1": {
        "needs": {
          "training_data": "run_WhitespaceTokenizer0",
          "resource": "train_RegexFeaturizer1"
        },
        "uses": "rasa.nlu.featurizers.sparse_featurizer.regex_featurizer.RegexFeaturizer",
        "constructor_name": "load",
        "fn": "process_training_data",
        "config": {},
        "eager": false,
        "is_target": false,
        "is_input": false,
        "resource": null
      },
      "train_LexicalSyntacticFeaturizer2": {
        "needs": {
          "training_data": "run_RegexFeaturizer1"
        },
        "uses": "rasa.nlu.featurizers.sparse_featurizer.lexical_syntactic_featurizer.LexicalSyntacticFeaturizer",
        "constructor_name": "create",
        "fn": "train",
        "config": {},
        "eager": false,
        "is_target": true,
        "is_input": false,
        "resource": null
      },
      "run_LexicalSyntacticFeaturizer2": {
        "needs": {
          "training_data": "run_RegexFeaturizer1",
          "resource": "train_LexicalSyntacticFeaturizer2"
        },
        "uses": "rasa.nlu.featurizers.sparse_featurizer.lexical_syntactic_featurizer.LexicalSyntacticFeaturizer",
        "constructor_name": "load",
        "fn": "process_training_data",
        "config": {},
        "eager": false,
        "is_target": false,
        "is_input": false,
        "resource": null
      },
      "train_CountVectorsFeaturizer3": {
        "needs": {
          "training_data": "run_LexicalSyntacticFeaturizer2"
        },
        "uses": "rasa.nlu.featurizers.sparse_featurizer.count_vectors_featurizer.CountVectorsFeaturizer",
        "constructor_name": "create",
        "fn": "train",
        "config": {},
        "eager": false,
        "is_target": true,
        "is_input": false,
        "resource": null
      },
      "run_CountVectorsFeaturizer3": {
        "needs": {
          "training_data": "run_LexicalSyntacticFeaturizer2",
          "resource": "train_CountVectorsFeaturizer3"
        },
        "uses": "rasa.nlu.featurizers.sparse_featurizer.count_vectors_featurizer.CountVectorsFeaturizer",
        "constructor_name": "load",
        "fn": "process_training_data",
        "config": {},
        "eager": false,
        "is_target": false,
        "is_input": false,
        "resource": null
      },
      "train_CountVectorsFeaturizer4": {
        "needs": {
          "training_data": "run_CountVectorsFeaturizer3"
        },
        "uses": "rasa.nlu.featurizers.sparse_featurizer.count_vectors_featurizer.CountVectorsFeaturizer",
        "constructor_name": "create",
        "fn": "train",
        "config": {
          "analyzer": "char_wb",
          "min_ngram": 1,
          "max_ngram": 4
        },
        "eager": false,
        "is_target": true,
        "is_input": false,
        "resource": null
      },
      "run_CountVectorsFeaturizer4": {
        "needs": {
          "training_data": "run_CountVectorsFeaturizer3",
          "resource": "train_CountVectorsFeaturizer4"
        },
        "uses": "rasa.nlu.featurizers.sparse_featurizer.count_vectors_featurizer.CountVectorsFeaturizer",
        "constructor_name": "load",
        "fn": "process_training_data",
        "config": {
          "analyzer": "char_wb",
          "min_ngram": 1,
          "max_ngram": 4
        },
        "eager": false,
        "is_target": false,
        "is_input": false,
        "resource": null
      },
      "train_DIETClassifier5": {
        "needs": {
          "training_data": "run_CountVectorsFeaturizer4"
        },
        "uses": "rasa.nlu.classifiers.diet_classifier.DIETClassifier",
        "constructor_name": "create",
        "fn": "train",
        "config": {
          "epochs": 100
        },
        "eager": false,
        "is_target": true,
        "is_input": false,
        "resource": null
      },
      "train_EntitySynonymMapper6": {
        "needs": {
          "training_data": "run_CountVectorsFeaturizer4"
        },
        "uses": "rasa.nlu.extractors.entity_synonyms.EntitySynonymMapper",
        "constructor_name": "create",
        "fn": "train",
        "config": {},
        "eager": false,
        "is_target": true,
        "is_input": false,
        "resource": null
      },
      "train_ResponseSelector7": {
        "needs": {
          "training_data": "run_CountVectorsFeaturizer4"
        },
        "uses": "rasa.nlu.selectors.response_selector.ResponseSelector",
        "constructor_name": "create",
        "fn": "train",
        "config": {
          "epochs": 100
        },
        "eager": false,
        "is_target": true,
        "is_input": false,
        "resource": null
      },
      "domain_provider": {
        "needs": {
          "importer": "finetuning_validator"
        },
        "uses": "rasa.graph_components.providers.domain_provider.DomainProvider",
        "constructor_name": "create",
        "fn": "provide_train",
        "config": {},
        "eager": false,
        "is_target": true,
        "is_input": true,
        "resource": null
      },
      "domain_for_core_training_provider": {
        "needs": {
          "domain": "domain_provider"
        },
        "uses": "rasa.graph_components.providers.domain_for_core_training_provider.DomainForCoreTrainingProvider",
        "constructor_name": "create",
        "fn": "provide",
        "config": {},
        "eager": false,
        "is_target": false,
        "is_input": true,
        "resource": null
      },
      "forms_provider": {
        "needs": {
          "domain": "domain_provider"
        },
        "uses": "rasa.graph_components.providers.forms_provider.FormsProvider",
        "constructor_name": "create",
        "fn": "provide",
        "config": {},
        "eager": false,
        "is_target": false,
        "is_input": true,
        "resource": null
      },
      "responses_provider": {
        "needs": {
          "domain": "domain_provider"
        },
        "uses": "rasa.graph_components.providers.responses_provider.ResponsesProvider",
        "constructor_name": "create",
        "fn": "provide",
        "config": {},
        "eager": false,
        "is_target": false,
        "is_input": true,
        "resource": null
      },
      "story_graph_provider": {
        "needs": {
          "importer": "finetuning_validator"
        },
        "uses": "rasa.graph_components.providers.story_graph_provider.StoryGraphProvider",
        "constructor_name": "create",
        "fn": "provide",
        "config": {
          "exclusion_percentage": null
        },
        "eager": false,
        "is_target": false,
        "is_input": true,
        "resource": null
      },
      "training_tracker_provider": {
        "needs": {
          "story_graph": "story_graph_provider",
          "domain": "domain_for_core_training_provider"
        },
        "uses": "rasa.graph_components.providers.training_tracker_provider.TrainingTrackerProvider",
        "constructor_name": "create",
        "fn": "provide",
        "config": {
          "debug_plots": false,
          "augmentation_factor": 50
        },
        "eager": false,
        "is_target": false,
        "is_input": false,
        "resource": null
      },
      "train_MemoizationPolicy0": {
        "needs": {
          "training_trackers": "training_tracker_provider",
          "domain": "domain_for_core_training_provider"
        },
        "uses": "rasa.core.policies.memoization.MemoizationPolicy",
        "constructor_name": "create",
        "fn": "train",
        "config": {},
        "eager": false,
        "is_target": true,
        "is_input": false,
        "resource": null
      },
      "train_TEDPolicy1": {
        "needs": {
          "training_trackers": "training_tracker_provider",
          "domain": "domain_for_core_training_provider"
        },
        "uses": "rasa.core.policies.ted_policy.TEDPolicy",
        "constructor_name": "create",
        "fn": "train",
        "config": {
          "max_history": 5,
          "epochs": 100
        },
        "eager": false,
        "is_target": true,
        "is_input": false,
        "resource": null
      },
      "train_RulePolicy2": {
        "needs": {
          "training_trackers": "training_tracker_provider",
          "domain": "domain_for_core_training_provider"
        },
        "uses": "rasa.core.policies.rule_policy.RulePolicy",
        "constructor_name": "create",
        "fn": "train",
        "config": {},
        "eager": false,
        "is_target": true,
        "is_input": false,
        "resource": null
      }
    }
  },
  "predict_schema": {
    "nodes": {
      "nlu_message_converter": {
        "needs": {
          "messages": "__message__"
        },
        "uses": "rasa.graph_components.converters.nlu_message_converter.NLUMessageConverter",
        "constructor_name": "load",
        "fn": "convert_user_message",
        "config": {},
        "eager": true,
        "is_target": false,
        "is_input": false,
        "resource": null
      },
      "run_WhitespaceTokenizer0": {
        "needs": {
          "messages": "nlu_message_converter"
        },
        "uses": "rasa.nlu.tokenizers.whitespace_tokenizer.WhitespaceTokenizer",
        "constructor_name": "load",
        "fn": "process",
        "config": {},
        "eager": true,
        "is_target": false,
        "is_input": false,
        "resource": null
      },
      "run_RegexFeaturizer1": {
        "needs": {
          "messages": "run_WhitespaceTokenizer0"
        },
        "uses": "rasa.nlu.featurizers.sparse_featurizer.regex_featurizer.RegexFeaturizer",
        "constructor_name": "load",
        "fn": "process",
        "config": {},
        "eager": true,
        "is_target": false,
        "is_input": false,
        "resource": {
          "name": "train_RegexFeaturizer1",
          "output_fingerprint": "86afb99b307a487d8ba1e83e63deb492"
        }
      },
      "run_LexicalSyntacticFeaturizer2": {
        "needs": {
          "messages": "run_RegexFeaturizer1"
        },
        "uses": "rasa.nlu.featurizers.sparse_featurizer.lexical_syntactic_featurizer.LexicalSyntacticFeaturizer",
        "constructor_name": "load",
        "fn": "process",
        "config": {},
        "eager": true,
        "is_target": false,
        "is_input": false,
        "resource": {
          "name": "train_LexicalSyntacticFeaturizer2",
          "output_fingerprint": "cea9665c4880445685d9baf057819936"
        }
      },
      "run_CountVectorsFeaturizer3": {
        "needs": {
          "messages": "run_LexicalSyntacticFeaturizer2"
        },
        "uses": "rasa.nlu.featurizers.sparse_featurizer.count_vectors_featurizer.CountVectorsFeaturizer",
        "constructor_name": "load",
        "fn": "process",
        "config": {},
        "eager": true,
        "is_target": false,
        "is_input": false,
        "resource": {
          "name": "train_CountVectorsFeaturizer3",
          "output_fingerprint": "488cd0bf152f4186892084cfef00569a"
        }
      },
      "run_CountVectorsFeaturizer4": {
        "needs": {
          "messages": "run_CountVectorsFeaturizer3"
        },
        "uses": "rasa.nlu.featurizers.sparse_featurizer.count_vectors_featurizer.CountVectorsFeaturizer",
        "constructor_name": "load",
        "fn": "process",
        "config": {
          "analyzer": "char_wb",
          "min_ngram": 1,
          "max_ngram": 4
        },
        "eager": true,
        "is_target": false,
        "is_input": false,
        "resource": {
          "name": "train_CountVectorsFeaturizer4",
          "output_fingerprint": "920690cc0afc4a1a812780a85e8ccdf4"
        }
      },
      "run_DIETClassifier5": {
        "needs": {
          "messages": "run_CountVectorsFeaturizer4"
        },
        "uses": "rasa.nlu.classifiers.diet_classifier.DIETClassifier",
        "constructor_name": "load",
        "fn": "process",
        "config": {
          "epochs": 100
        },
        "eager": true,
        "is_target": false,
        "is_input": false,
        "resource": {
          "name": "train_DIETClassifier5",
          "output_fingerprint": "b3999a4ee5b9488d80d61eb73202b390"
        }
      },
      "run_EntitySynonymMapper6": {
        "needs": {
          "messages": "run_DIETClassifier5"
        },
        "uses": "rasa.nlu.extractors.entity_synonyms.EntitySynonymMapper",
        "constructor_name": "load",
        "fn": "process",
        "config": {},
        "eager": true,
        "is_target": false,
        "is_input": false,
        "resource": {
          "name": "train_EntitySynonymMapper6",
          "output_fingerprint": "0210384bcb0b4a479120befab6b213c0"
        }
      },
      "run_ResponseSelector7": {
        "needs": {
          "messages": "run_EntitySynonymMapper6"
        },
        "uses": "rasa.nlu.selectors.response_selector.ResponseSelector",
        "constructor_name": "load",
        "fn": "process",
        "config": {
          "epochs": 100
        },
        "eager": true,
        "is_target": false,
        "is_input": false,
        "resource": {
          "name": "train_ResponseSelector7",
          "output_fingerprint": "4e3c6ed9528b495bac2549f84fe254a7"
        }
      },
      "run_RegexMessageHandler": {
        "needs": {
          "messages": "run_ResponseSelector7",
          "domain": "domain_provider"
        },
        "uses": "rasa.nlu.classifiers.regex_message_handler.RegexMessageHandler",
        "constructor_name": "load",
        "fn": "process",
        "config": {},
        "eager": true,
        "is_target": false,
        "is_input": false,
        "resource": null
      },
      "domain_provider": {
        "needs": {},
        "uses": "rasa.graph_components.providers.domain_provider.DomainProvider",
        "constructor_name": "load",
        "fn": "provide_inference",
        "config": {},
        "eager": true,
        "is_target": false,
        "is_input": false,
        "resource": {
          "name": "domain_provider",
          "output_fingerprint": "2df8bf8ea8c3471e9e08c0dda7bd0e08"
        }
      },
      "run_MemoizationPolicy0": {
        "needs": {
          "rule_only_data": "rule_only_data_provider",
          "tracker": "__tracker__",
          "domain": "domain_provider"
        },
        "uses": "rasa.core.policies.memoization.MemoizationPolicy",
        "constructor_name": "load",
        "fn": "predict_action_probabilities",
        "config": {},
        "eager": true,
        "is_target": false,
        "is_input": false,
        "resource": {
          "name": "train_MemoizationPolicy0",
          "output_fingerprint": "22b60651ca2c44a9999f62a2603e8afc"
        }
      },
      "run_TEDPolicy1": {
        "needs": {
          "rule_only_data": "rule_only_data_provider",
          "tracker": "__tracker__",
          "domain": "domain_provider"
        },
        "uses": "rasa.core.policies.ted_policy.TEDPolicy",
        "constructor_name": "load",
        "fn": "predict_action_probabilities",
        "config": {
          "max_history": 5,
          "epochs": 100
        },
        "eager": true,
        "is_target": false,
        "is_input": false,
        "resource": {
          "name": "train_TEDPolicy1",
          "output_fingerprint": "3be587f16b8048cfae0fad711e004c34"
        }
      },
      "run_RulePolicy2": {
        "needs": {
          "rule_only_data": "rule_only_data_provider",
          "tracker": "__tracker__",
          "domain": "domain_provider"
        },
        "uses": "rasa.core.policies.rule_policy.RulePolicy",
        "constructor_name": "load",
        "fn": "predict_action_probabilities",
        "config": {},
        "eager": true,
        "is_target": false,
        "is_input": false,
        "resource": {
          "name": "train_RulePolicy2",
          "output_fingerprint": "4c1a8d30959945afae91c0955d2e4e70"
        }
      },
      "rule_only_data_provider": {
        "needs": {},
        "uses": "rasa.graph_components.providers.rule_only_provider.RuleOnlyDataProvider",
        "constructor_name": "load",
        "fn": "provide",
        "config": {},
        "eager": true,
        "is_target": false,
        "is_input": false,
        "resource": {
          "name": "train_RulePolicy2",
          "output_fingerprint": "5e50b32c9ef04798a16c1c465d078a26"
        }
      },
      "select_prediction": {
        "needs": {
          "policy0": "run_MemoizationPolicy0",
          "policy1": "run_TEDPolicy1",
          "policy2": "run_RulePolicy2",
          "domain": "domain_provider",
          "tracker": "__tracker__"
        },
        "uses": "rasa.core.policies.ensemble.DefaultPolicyPredictionEnsemble",
        "constructor_name": "load",
        "fn": "combine_predictions_from_kwargs",
        "config": {},
        "eager": true,
        "is_target": false,
        "is_input": false,
        "resource": null
      }
    }
  },
  "training_type": 3,
  "project_fingerprint": null,
  "core_target": "select_prediction",
  "nlu_target": "run_RegexMessageHandler",
  "language": "en",
  "spaces": null
}